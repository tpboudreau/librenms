#!/bin/sh

TOOL=${SPING_TOOL:-'/usr/bin/snmpstatus'}
RETRIES=${SPING_RETRIES:-'2'}
TIMEOUT=${SPING_TIMEOUT:-'5'}

assign()
{
  TRANSPORT=${1:-'udp'}
  HOST=${2:-'0.0.0.0'}
  PORT=${3:-'161'}
  AGENT=${TRANSPORT}:${HOST}:${PORT}
  VERSION=${4:-'unknown'}
  case ${VERSION} in
    1|2c)
      COMMUNITY=${5:-'public'}
      COMMAND="${TOOL} -r ${RETRIES} -t ${TIMEOUT} -v ${VERSION} -c ${COMMUNITY} ${AGENT}"
    ;;
    3)
      USER=${5:-'noAuthNoPriv'}
      COMMAND="${TOOL} -r ${RETRIES} -t ${TIMEOUT} -v 3 -u ${USER} -l noAuthNoPriv ${AGENT}"
    ;;
    3A)
      USER=${5:-'authNoPriv'}
      AUTHENTICATION_ALGORITHM=${6:-'MD5'}
      AUTHENTICATION_PASSWORD=${7:-'PASSWORD'}
      COMMAND="${TOOL} -r ${RETRIES} -t ${TIMEOUT} -v 3 -u ${USER} -a ${AUTHENTICATION_ALGORITHM} -A ${AUTHENTICATION_PASSWORD} -l authNoPriv ${AGENT}"
    ;;
    3AP)
      USER=${5:-'authPriv'}
      AUTHENTICATION_ALGORITHM=${6:-'MD5'}
      AUTHENTICATION_PASSWORD=${7:-'PASSWORD'}
      PRIVACY_ALGORITHM=${8:-'DES'}
      PRIVACY_PASSWORD=${9:-'PASSWORD'}
      COMMAND="${TOOL} -r ${RETRIES} -t ${TIMEOUT} -v 3 -u ${USER} -a ${AUTHENTICATION_ALGORITHM} -A ${AUTHENTICATION_PASSWORD} -x ${PRIVACY_ALGORITHM} -X ${PRIVACY_PASSWORD} -l authPriv ${AGENT}"
    ;;
    *)
      COMMAND="false"
    ;;
  esac
}

run()
{
  t=$(date +%s%N)
  COMMAND_OUTPUT=$(${COMMAND} 2>&1)
  RETURN_CODE=$?
  ELAPSED_TIME=$((($(date +%s%N) - ${t})/1000000))
}

if [ -z "${1}" ]
then
  while read D; do
    assign $(echo ${D} | tr '|' ' ')
    run
    if [ ${RETURN_CODE} -eq 0 ]
    then
      echo "${HOST} is alive (${ELAPSED_TIME} ms)"
    elif echo "${COMMAND_OUTPUT}" | grep -i -q 'no response'
    then
      echo "${HOST} is unreachable"
    elif echo "${OUTPUT}" | grep -i -q 'unknown host'
    then
      >&2 echo "${HOST}: Name or service not known"
    else
      >&2 echo "${HOST}: SNMP status check failed"
    fi
  done < /dev/stdin
else
  assign $(echo ${1} | tr '|' ' ')
  run
  if [ ${RETURN_CODE} -eq 0 ]
  then
    echo "${HOST}: SNMP status check succeeded (${ELAPSED_TIME} ms)"
  else
    >&2 echo "${HOST}: SNMP status check failed"
  fi
fi

exit ${RETURN_CODE}

